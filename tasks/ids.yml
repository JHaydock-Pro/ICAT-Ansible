---

- name: "{{ play_name }}Loading Pre-playbook Check"
  include: "preplay.yml"

#---

#---Downloading IDS---

- stat:
    path: "{{ download_dir }}{{ ids_zip }}"
  register: ip_zip

- name: "Downloading {{ ids_zip }}"
  get_url:
    url: "{{ ids_src }}"
    dest: "{{ download_dir }}"
  when: ip_zip.stat.exists == false

#---

#---Unzipping IDS---

- stat:
    path: "{{ ids_path }}"
  register: ip_dir    

- name: "{{ play_name }}Unzipping {{ ids_zip }}"
  unarchive:
    src: "{{ download_dir }}{{ ids_zip }}"
    dest: "{{ user_home }}/"
    remote_src: yes
  when: ip_dir.stat.exists == false

#---

#---Setup Properties file---

- name: "{{ play_name }}Creating {{ ids_setup }} - Creating empty file"
  file:
    path: "{{ ids_path }}/{{ ids_setup }}"
    state: touch 

- name: "{{ play_name }}Configuring {{ ids_setup }} - Adding glassfish container block"
  blockinfile:
    path: "{{ ids_path }}/{{ ids_setup }}"
    block: "{{ glassfish_cnf }}"
    state: present

- name: "{{ play_name }}Configuring {{ ids_setup }} - Configuring Libraries"
  lineinfile:
    path: "{{ ids_path }}/{{ ids_setup }}"
    regexp: "libraries"
    line: libraries=ids.storage_file*.jar
    state: present

#---

#---Creating Cache---

- name: "{{ play_name }}Creating Cache"
  file:
    path: "{{ user_home }}/{{ icat_name }}/main/ids/cache/"
    state: directory

#---

#---Properties file---

- name: "{{ play_name }}Creating {{ ids_prop }}"
  copy:
    src: "{{ ids_path }}/{{ ids_prop }}.example"
    dest: "{{ ids_path }}/{{ ids_prop }}"
    remote_src: yes
    
- name: "{{ play_name }}Configuring {{ ids_prop }}"
  lineinfile:
    path: "{{ ids_path }}/{{ ids_prop }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "icat.url",      line: "icat.url = {{ icat_url }}" }
    - { regexp: "cache.dir",     line: "cache.dir = {{ user_home }}/{{ icat_name }}/main/ids/cache/" }
    - { regexp: "rootUserNames", line: "rootUserNames = {{ icat_mech }}/{{ icat_root }}" }
    - { regexp: "reader",        line: "reader = {{ icat_mech }} username {{ icat_root }} password {{ icat_pass }}" }
    - { regexp: "storageUnit",   line: "storageUnit = datafile" }
    - { regexp: ".lastIdFile",   line: "filesCheck.lastIdFile = {{ user_home }}/{{ icat_name }}/main/ids/lasIdFile" }
    - { regexp: ".errorlog",     line: "filesCheck.errorLog = {{ user_home }}/{{ icat_name }}/main/ids/errorLog" }

#---

#---Running Setup---

- name: "{{ play_name }}Installing IDS"
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ glassfish_path }}/bin"
  shell:
    cmd: ./setup install
    chdir: "{{ ids_path }}"

- name: "{{ play_name }}Checking IDS"
  command: "curl -k {{ icat_url }}/ids/ping"
  register: ids_out

- debug: var=ids_out.stdout

#---
