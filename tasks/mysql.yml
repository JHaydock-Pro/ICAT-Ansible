---

#---Setting Variables for RedHat/Debian---

- name: "{{ play_name }}Setting variables for RedHat"
  set_fact:
     mysql_cnf_path: "{{ mysql_cnf_path_redhat }}"
     mysqld: mysqld 
  when: 
    - ansible_os_family == "RedHat"
  tags:
    - redhat

- name: "{{ play_name }}Setting variables for Debian"
  set_fact:
     mysqld:  mysql
     mysql_cnf_path: "{{ mysql_cnf_path_debian }}"
  when: 
    - ansible_os_family == "Debian"
  tags:
    - debian

#---

#---Downloading Packages for RedHat/Debian---

- name: "{{ play_name }}Installing MySQL Packages for RedHat"
  yum:
    name: "{{ item }}"
    state: present
  with_items: "{{ mysql_packages_redhat }}"
  when: 
    - ansible_os_family == "RedHat"
  tags:
    - redhat

- name: "{{ play_name }}Installing MySQL Packages for Debian"
  apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ mysql_packages_debian }}"
  when: 
    - ansible_os_family == "Debian"
  tags:
    - debian

#---

- name: "{{ play_name }}Checking MySQL Version"
  command: mysql --version

#---Modifying Config File---

- name: "{{ play_name }}Configuring my.cnf"
  lineinfile:
    path: "{{ mysql_cnf_path }}"
    insertafter: "{{ item.after }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { after: '^\[mysqld\]', regexp: "default_storage_engine", line: "default_storage_engine = {{ mysql_cnf_eng }}" }
    - { after: '^\[mysql\]',  regexp: "local-infile",           line: "local-infile=1" }

#---

#---Running Secure Install---
 
- name: "{{ play_name }}Starting database"
  service:
    name: "{{ mysqld }}"
    state: started

#---TODO!---Improve this task so it doesn't run at all if first install

- name: "{{ play_name }}Temporarly reseting MySQL root password (This will return an error on first run but should ignore it)"
  command: "mysqladmin -u root -p'{{ mysql_root_pass }}' password ''"
  ignore_errors: true

#---TODO!---add responses to variable

- name: "{{ play_name }}Running '{{ mysql_secure }}'"
  expect:
    command: mysql_secure_installation
    responses:
      'Enter current password for root \(enter for none\):': "\n"
      'Set root password?': 'y'
      'New password:': "{{ mysql_root_pass }}"
      'Re-enter new password:': "{{ mysql_root_pass }}"
      'Remove anonymous users?': 'y'
      'Disallow root login remotely?': 'y'
      'Remove test database and access to it?': 'y'
      'Reload privilege tables now?': 'y'

#---

#---Creating Database and Login---

- name: "{{ play_name }}Creating database - {{ icat_name }}"
  mysql_db:
    login_user: root
    login_password: "{{ mysql_root_pass }}"
    name: "{{ icat_name }}"
    state: present

- name: "{{ play_name }}Creating Database login - user={{ mysql_user }} pass={{ mysql_pass }}"
  mysql_user:
    login_user: root
    login_password: "{{ mysql_root_pass }}"
    name: "{{ mysql_user }}"
    password: "{{ mysql_pass }}"
    priv: '*.*:ALL,GRANT'
    state: present

#---
