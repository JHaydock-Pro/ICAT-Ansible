---

- name: "{{ play_name }}Installing Dependencies for Yum"
  yum:
    name: "{{ item }}"
    state: present
  become: yes
  become_user: root
  become_method: sudo
  with_items:
    - firefox
    - xorg-x11-server-Xvfb
  when:
    - ansible_pkg_mgr == "yum"

- name: "{{ play_name }}Installing Dependencies for Apt"
  apt:
    name: "{{ item }}"
    state: present
  become: yes
  become_user: root
  become_method: sudo
  with_items:
    - firefox
    - xvfb
  when:
    - ansible_pkg_mgr == "apt"


- name: "{{ play_name }}Installing dependencies with Pip"
  pip:
    name: "{{ item }}"
    state: present
  become: yes
  become_user: root
  become_method: sudo
  with_items:
    - pyvirtualdisplay
    - selenium

- name: "{{ play_name }}Creating test directories"
  file:
    path: "{{ download_dir }}{{ item }}"
    state: directory
  with_items:
    - 
    - Tests
    - Tests/Firefox
    - Tests/Chrome

- name: "{{ play_name }}Downloading Webdrivers"
  get_url:
    url: "{{ item }}"
    dest: "{{ download_dir }}"
  with_items:
    - "{{ firefox_src }}"
    - "{{ chrome_src }}"

- name: "{{ play_name }}Unzipping Webdrivers"
  unarchive:
    src: "{{ download_dir }}{{ item }}"
    dest: "{{ download_dir }}Tests"
    remote_src: yes
  with_items:
    - "{{ firefox_zip }}"
    - "{{ chrome_zip }}"

- name: "{{ play_name }}Copying Selenium Script and geckodriver workaround script"
  template:
    src: "{{ role_path }}/files/{{ item }}"
    dest: "{{ download_dir }}Tests/"
    mode: "u+x"
  with_items:
    - topcat_test.py
    - gecko.sh

- name: "{{ play_name }}Templating Arguments for Selenium Script"
  template:
    src: "{{ role_path }}/files/test_args.txt"
    dest: "{{ download_dir }}Tests/"
