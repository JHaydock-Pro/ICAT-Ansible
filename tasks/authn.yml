---

- name: "{{ play_name }}Starting {{ container_domain }} before tasks"
  include: "startdomain.yml"

#---

- name: "{{ play_name }}Setting Variables for Authn Simple"
  set_fact:
    authn_version: "{{ simple_version }}"
    authn_users_s: 
    authn_cnf_list: "{{ container_cnf_list }}"
  when: authn_plugin == "simple"

- name: "{{ play_name }}Setting Variables for Authn DB"
  set_fact:
    authn_version: "{{ db_version }}"
    authn_cnf_list: "{{ container_cnf_list }} + {{ mysql_cnf_list }}"
  when: authn_plugin == "db"

- name: "{{ play_name }}Setting Variables for Authn LDAP"
  set_fact:
    authn_version: "{{ ldap_version }}"
    authn_cnf_list: "{{ container_cnf_list }}"
  when: authn_plugin == "ldap"

- name: "{{ play_name }}Setting Variables for Authn Anon"
  set_fact:
    authn_version: "{{ anon_version }}"
    authn_cnf_list: "{{ container_cnf_list }}"
  when: authn_plugin == "anon"

#---

- name: "{{ play_name }}Replacing target with vendor for DB versions older than 2.0.0"
  set_fact:
    authn_cnf_list: "{{ authn_cnf_list }} + {{ mysql_cnf_list | replace('target','vendor') }}"
  when:
    - authn_plugin == "db"
    - db_version | version_compare('2.0.0', '<') == true

#---Changing Sub Domains for older versions---
 # Older versions of these plugins are hosted on 'www.icatproject.org' not 'repo.icatproject.org'
 # This corrects that

- name: "{{ play_name }}Reseting URL variable"
  set_fact:
    sub_domain: repo
    url_mvn:

- name: "{{ play_name }}Changing URL for simple versions older than 1.2.0"
  set_fact:
    sub_domain: www
    url_mvn: mvn/
  when:
    - authn_plugin == "simple"
    - authn_version | version_compare('1.2.0', '<' ) == true

- name: "{{ play_name }}Changing URL for DB version older than 1.2.1"
  set_fact:
    sub_domain: www
    url_mvn: mvn/
  when:
    - authn_plugin == "db"
    - authn_version | version_compare('1.2.1', '<' ) == true

- name: "{{ play_name }}Changing URL for LDAP versions older than 1.2.1"
  set_fact:
    sub_domain: www
    url_mvn: mvn/
  when:
    - authn_plugin == "ldap"
    - authn_version | version_compare('1.2.1', '<' ) == true

- name: "{{ play_name }}Changing URL for Anon versions older than 1.1.2"
  set_fact:
    sub_domain: www
    url_mvn: mvn/
  when:
    - authn_plugin == "anon"
    - authn_version | version_compare('1.1.2', '<') == true

#---

#---Changing Properties filenames for older versions---
 # Newer versions of these plugins use 'run.properties' and 'setup.properties' as filenames
 # Older ones use '{{ plugin_name }}.properties' and '{{ plugin_name }}-setup.properties'

- name: "{{ play_name }}Reseting filenames"
  set_fact:
    authn_setup: "setup.properties"
    authn_prop: "run.properties"

- name: "{{ play_name }}Changing filenames for Simple, DB and LDAP versions older than 2.0.0"
  set_fact:
    authn_setup: "authn_{{ authn_plugin }}-setup.properties"
    authn_prop: "authn_{{ authn_plugin }}.properties"
  when:
    - ( authn_plugin == "simple" ) or ( authn_plugin == "db" ) or ( authn_plugin == "ldap" )
    - authn_version | version_compare('2.0.0', '<' ) == true

- name: "{{ play_name }}Changing filenames for Anon versions older than 1.1.2"
  set_fact:
    authn_setup: "authn_anon-setup.properties"
    authn_prop: "authn_anon.properties"
  when:
    - authn_plugin == "anon"
    - authn_version | version_compare('1.1.2', '<') == true

#---

#---Downloading Authn---

- name: "{{ play_name }}Downloading"
  include: "download.yml"
  vars:
    - download_zip: "{{ authn_zip }}"
    - download_src: "{{ authn_src }}"
    - download_path: "{{ authn_path }}"
    - download_dest: "{{ user_home }}"

#---

#---Setup-Properties---

- name: "{{ play_name }}Checking if {{ authn_setup }} exists"
  stat:
    path: "{{ authn_path }}/{{ authn_setup }}"
  register: a_setup

- name: "{{ play_name }}Copying {{ authn_setup }}.example"
  copy:
    src: "{{ authn_path }}/{{ authn_setup }}.example"
    dest: "{{ authn_path }}/{{ authn_setup }}"
    remote_src: yes
  when:
    - a_setup.stat.exists == false

- name: "{{ play_name }}Configuring {{ authn_setup }}"
  lineinfile:
    path: "{{ authn_path }}/{{ authn_setup }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items: "{{ authn_cnf_list }}"

#---

#---Properties---

- name: "{{ play_name }}Copying {{ authn_prop }}.example"
  copy:
    src: "{{ authn_path }}/{{ authn_prop }}.example"
    dest: "{{ authn_path }}/{{ authn_prop }}"
    remote_src: yes
    force: no

#---

#---Setup Users---

#--Simple--

- name: "{{ play_name }}Gathering User list for Authn Simple (Simple Only)"
  set_fact:
    authn_users_s: "{{ authn_users_s }} {{ item.user }}"
  with_items:
    - "{{ authn_simple_users }}"
  when: authn_plugin == "simple"
  tags:
    - simple

- name: "{{ play_name }}Creating usernames in {{ authn_prop }} (Simple Only)"
  lineinfile:
    path: "{{ authn_path }}/{{ authn_prop }}"
    regexp: 'user.list'
    line: "user.list = {{ authn_users_s }}"
  when: authn_plugin == "simple"      
  tags:
    - simple

- name: "{{ play_name }}Adding passwords to {{ authn_prop }} (Simple Only)"
  lineinfile:
    path: "{{ authn_path }}/{{ authn_prop }}"
    regexp: "user.{{ item.user }}"
    line: "user.{{ item.user }}.password = {{ item.pass }}"
    insertafter: "usere"
  with_items:
    - "{{ authn_simple_users }}"
  when: authn_plugin == "simple"
  tags:
    - simple


#--DB--

- name: "{{ play_name }}Checking if PASSWD.text exists"
  stat:
    path: "{{ download_dir }}/PASSWD.text"
  register: ps_txt

- name: "{{ play_name }}Creating list of Users and Passwords for import (DB Only)"
  file:
    path: "{{ download_dir }}/PASSWD.text"
    state: touch
  when: 
    - authn_plugin == "db"
    - ps_txt.stat.exists == false
  tags:
    - db

- name: "{{ play_name }}Adding users and passwords to file for import (DB Only)"
  lineinfile:
    path: "{{ download_dir }}/PASSWD.text"
    regexp: "^{{ item.user }}"
    line: "{{ item.user }},{{ item.pass }}"
  with_items:
    - "{{ authn_db_users }}"
  when: authn_plugin == "db"
  tags:
    - db
 
- name: "{{ play_name }}Copying file for database import (DB Only)"
  template:
    src: "../templates/passwd.sql"
    dest: "{{ download_dir }}"
  when: authn_plugin == "db"
  tags:
    - db

- name: "{{ play_name }}Deleting PASSWD table if requested (DB Only)"
  lineinfile:
    path: "{{ download_dir }}passwd.sql"
    regexp: "^drop table PASSWD"
    insertbefore: "^create"
    line: "drop table if exists PASSWD;"
  when: 
    - authn_plugin == "db"
    - delete_passwd == true
  tags:
    - db
  
- name: "{{ play_name}}Deleting duplicate users in PASSWD if requested (DB Only)"
  lineinfile:
    path: "{{ download_dir }}passwd.sql"
    regexp: "{{ item.user }}"
    insertbefore: "^create"
    line: "DELETE from PASSWD where UserName = '{{ item.user }}';"
  with_items: 
   - "{{ authn_db_users }}" 
  when: 
    - authn_plugin == "db"
    - delete_users == true 
  tags:
    - db

- name: "{{ play_name }}Importing data into PASSWD table (DB Only)"
  mysql_db:
    state: import
    target: "{{ download_dir }}passwd.sql"
    login_user: root
    login_password: "{{ mysql_root_pass }}"
    name: "{{ icat_name }}"
  when: authn_plugin == "db"
  tags:
    - db

- name: "{{ play_name }}Deleting password list"
  file:
    path: "{{ download_dir }}PASSWD.text"
    state: absent
  when:
    -  authn_plugin == "db"
  tags:
    - db

#--LDAP--

- name: "{{ play_name }}Adding Ldap server to {{ authn_prop }} (LDAP Only)"
  lineinfile:
    path: "{{ authn_path }}/{{ authn_prop }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "provider_url",       line: "provider_url = {{ ldap_provider }}" }
    - { regexp: "security_principal", line: "security_principal = {{ ldap_principal }}" }
  when: authn_plugin == "ldap"

#--Anon--

#No user setup required

#---

#---Running Setup---

- name: "{{ play_name }}Installing {{ authn_plugin }} Authentication"
  shell:
    cmd: ./setup install
    chdir: "{{ authn_path }}"
  tags:
    - install

#---

#--Quick Test--

- name: "{{ play_name }}Checking Installed Authenticator Version"
  command: "curl {{ icat_url }}/authn.{{ authn_plugin }}/version"
  register: curl_authn

- name: "{{ play_name }}Failing If Authenticator Output Incorrect"
  fail:
    msg: 
      - 'Authn has a problem.'
      - 'Expected stdout: "{"version":"{{ authn_version }}"}"'
      - 'Actual stdout:   "{{ curl_authn.stdout }}"'
      - 'NOTE: Only version number is check all other text and syntax are ignored.'
  when:
    - authn_version not in curl_authn.stdout

#---

