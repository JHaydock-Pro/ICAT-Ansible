#---Notifcations---

notifications:
  email: false

#---Language---

language: python

#---Branches---

branches:
  only:
    - PolyVersion

#---Environment---

sudo: required

#---Services---

#-----BEGIN BUILD-----

 #--Before Install--

addons:
  firefox: latest
  chrome: stable

 #--Install--

install:
  - pip install ansible
  - pip install selenium
  - pip install pyvirtualdisplay

 #--Before Script--

 #--Script--

# Many warnings are ignored on the Idempotence run, this is to reduce clutter, making it easier to see which tasks are not idempotent, all default warnings are enabled for the first run

script:
# First run Test
  - "echo 'allow_world_readable_tmpfiles=True' >> ansible.cfg"		# Allows world readable temp files, not secure should only be used within Travis
  - "ANSIBLE_CONFIG=ansible.cfg ansible-playbook -i tests/inventory tests/test.yml --connection=local --extra-vars '@presets/travis_4.9.1.yml'"
#
# Deletion Script Test
  - "ANSIBLE_CONFIG=ansible.cfg ansible-playbook -i tests/inventory tests/test.yml --connection=local --extra-vars '@presets/travis_4.9.1.yml' --extra-vars 'delete_fac=true'  --tags 'pycat'"
#
# Idempotence Test
#  - "sed -i 's/delete_fac: true/delete_fac: false/g' config.yml"	# Test Idempotence
#  - "echo 'stdout_callback = actionable' >> ansible.cfg"		# Only Output Changed or Failed Tasks
#  - "echo 'deprecation_warnings = False' >> ansible.cfg"		# Ignore Depriciation Warnings
#  - "echo 'command_warnings = False' >> ansible.cfg"			# Ignore Command Module Warnings
#  - "echo 'system_warnings = False' >> ansible.cfg"			# Ignore System Warnings
#  - "ANSIBLE_CONFIG=ansible.cfg ansible-playbook -i tests/inventory tests/test.yml --connection=local --extra-vars '@presets/travis_4.9.1.yml' --diff"  
# Reduce changed tasks to lowest possible number (0 if possible) then check that changed value does not exceed that, fail if it does 
#
# Interface Test
  - "cd /home/user1/icatdownloads/Tests"
  - "touch topcat_test.log"
  - "cat test_args.txt | sudo xargs python topcat_test.py | tee topcat_test.log"
  - "cat topcat_test.log | grep Failed && (echo 'Interface Test Failed' && exit 1) || (echo 'Interface Test Passed' && exit 0)"
# run topcat_test.py, tee output
# grep ^ output fail if the string 'Failed' appears


 #--After Script--

 #--Before Deploy--

 #--Deploy--

 #--After Deploy--
