---

- name: "{{ play_name }}Loading Pre-playbook Check"
  include: "preplay.yml"

#---

#---Downloading ICAT Server---

- stat:
    path: "{{ download_dir }}{{ icat_zip }}"
  register: is_zip

- name: "{{ play_name }}Downloading {{ icat_zip }}"
  get_url:
    url: "{{ icat_src }}"
    dest: "{{ download_dir }}"
  when: is_zip.stat.exists == false

#---

#---Unzipping Icat Server---

- stat:
    path: "{{ icat_path }}"
  register: is_dir

- name: "{{ play_name }}Unzipping {{ icat_zip }}"
  unarchive:
    src: "{{ download_dir }}{{ icat_zip }}"
    dest: "{{ user_home }}/"
    remote_src: yes
  when: is_dir.stat.exists == false

#---

#---Setup file---

- name: "{{ play_name }}Creating {{ icat_setup }}"
  file:
    path: "{{ icat_path }}/{{ icat_setup }}"
    state: touch

- name: "{{ play_name }}Configuring {{ icat_setup }}"
  blockinfile:
    path: "{{ icat_path }}/{{ icat_setup }}"
    block: |
      {{ glassfish_cnf }}

      {{ mysql_cnf }}

#---

#---Lucene Directory---

- name: "{{ play_name }}Creating Lucene directory"
  file: 
    path: "{{ lucene_dir }}"
    state: directory

#---

#---Script Directory---

- name: "{{ play_name }}Creating script directory"
  file:
    path: "{{ user_home }}/bin"
    state: directory

- name: "{{ play_name }}Adding script directory to bashrc"
  lineinfile:
    path: "{{ user_home }}/.bashrc"
    line: "export PATH=$PATH:{{ user_home }}/bin"

#---

#---Icat Properties---

- name: "{{ play_name }}Creating {{ icat_prop }}"
  copy:
    src: "{{ icat_path }}/{{ icat_prop }}.example"
    dest: "{{ icat_path }}/{{ icat_prop }}"
    remote_src: yes

#--Authn Simple--

- name: "{{ play_name }}Configuring {{ icat_prop }} - Rewriting lines for authn.simple"
  lineinfile:
    dest: "{{ icat_path }}/{{ icat_prop }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: 'rootUserNames', line: 'rootUserNames = simple/root' }
    - { regexp: 'authn.list', line: 'authn.list = simple' }
    - { regexp: 'lucene.directory', line: 'lucene.directory = {{ lucene_dir }}' }

- name: "{{ play_name }}Configuring {{ icat_prop }} - Configuring commenting for authn.simple"
  replace:
    path: "{{ icat_path }}/{{ icat_prop }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items:
    - { regexp: '!authn.simple.jndi', replace: 'authn.simple.jndi' }
    - { regexp: '!authn.simple.friendly', replace: 'authn.simple.friendly' }
  when: authn_simple == true

#    - { regexp: 'authn.db', replace: '!authn.db' }
#    - { regexp: 'authn.ldap', replace: '!authn.ldap' }
#    - { regexp: 'authn.anon', replace: '!authn.anon' }

- name: "{{ play_name }}Configuring {{ icat_prop }} - adding authn.simple.friendly line"
  lineinfile:
    dest: "{{ icat_path }}/{{ icat_prop }}"
    insertafter: 'authn.simple.jndi'
    line: 'authn.simple.friendly = Simple'

#--

#--Authn DB--

#--

#--Authn LDAP--

#--

#--Authn Anon--

#--

  
#---

#---Running Setup---

- name: "{{ play_name }}Installing ICAT server"
  shell:
    cmd: ./setup install
    chdir: "{{ icat_path }}"

- name: "{{ play_name }}Checking ICAT"
  command: "curl -k {{ icat_url }}/icat/version"
  register: icat_out

- debug: var=icat_out.stdout_lines

#---
