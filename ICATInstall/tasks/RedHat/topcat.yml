---

- name: "{{ play_name }}Checking download directory '{{ download_dir }}' - Creating if non-existent"
  file:
    path: "{{ download_dir }}"
    state: directory

- name: "{{ play_name }}Downloading {{ topcat_zip }} to '{[ download_dir }}'"
  get_url:
    url: "{{ topcat_src }}"
    dest: "{{ download_dir }}"
    
- name: "{{ play_name }}Unzipping {{ topcat_zip }} to '/home/{{ user_name }}'"
  unarchive:
    src: "{{ download_dir }}{{ topcat_zip }}"
    dest: "/home/{{ user_name }}/"
    remote_src: yes

- name: "{{ play_name }}Creating {{ topcat_setup }} - Creating empty file in '/home/{{ user_name }}/topcat/'"
  file:
    path: "/home/{{ user_name }}/topcat/{{ topcat_setup }}"
    state: touch

- name: "{{ play_name }}Configuring {{ topcat_setup }} - Adding Glassfish container, MySQL container and Email Config"
  blockinfile:
    path: "/home/{{ user_name }}/topcat/{{ topcat_setup }}"
    block: |
      {{ glassfish_cnf }}    
      {{ mysql_cnf }}
      {{ email_cnf }}
      
- name: "{{ play_name }}Creating {{ topcat_prop }} - Copying example file from '/home/{{ user_name }}/topcat/{{ topcat_prop }}.example'"
  copy:
    src: "/home/{{ user_name }}/topcat/{{ topcat_prop }}.example"
    dest: "/home/{{ user_name }}/topcat/{{ topcat_prop }}"
    remote_src: yes
  
- name: "{{ play_name }}Configuring {{ topcat_prop }} - Adding lines"
  lineinfile:
    path: "/home/{{ user_name }}/topcat/{{ topcat_prop }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "mail.enable",    line: "mail.enable = {{ mail_enable }}"}
    - { regexp: "ids.getstatus",  line: "ids.getStatus.max = 100" }
    - { regexp: "poll.delay",     line: "poll.delay = 600" }
    - { regexp: "poll.interval",  line: "poll.interval.wait = 600" }
    - { regexp: "adminUserNames", line: "adminUserNames = simple/root" }

- name: "{{ play_name }}Creating {{ topcat_json }}, {{ topcat_lang }} and {{ topcat_css }} - Copying example files"
  copy:
    src: "/home/{{ user_name}}/topcat/{{ item }}.example"
    dest: "/home/{{ user_name}}/topcat/{{ item }}"
    remote_src: yes
  with_items:
    - "{{ topcat_json }}"
    - "{{ topcat_lang }}"
    - "{{ topcat_css }}"

- name: "{{ play_name }}Configuring {{ topcat_json }} - Replacing https with http, port 8181 with 8080, and facility name with LILS"
  replace:
    path: "/home/{{ user_name }}/topcat/{{ topcat_json }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.rep }}"
  with_items:
    - { regexp: "https", rep: "http" }
    - { regexp: "8181",  rep: "8080" }
    - { regexp: 'your facility name[^"]*', rep: "LILS" }

- name: "{{ play_name }}Installing TopCat"
  shell:
    cmd: ./setup install
    chdir: "/home/{{ user_name }}/topcat"

