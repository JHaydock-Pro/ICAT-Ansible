---
# vars file for /etc/ansible/roles/ICATInstall/

#---master---

#icat_url: http://{{ inventory_hostname }}:8080/

#---Java---

#java_package_redhat: java-1.8.0-openjdk-devel 
#java_repo_debian: 'ppa:openjdk-r/ppa'
#java_package_debian: openjdk-8-jdk


#---MySQL---

#mysql_packages:
#mysql_packages_redhat: mysql-server,mysql,MySQL-python,python-suds,python-requests,mysql-connector-java
#mysql_packages_debian: mysql-server,mysql-client,python-mysqldb,python-suds,python-requests,libmysql-java

#mysql_cnf_path_redhat: /etc/my.cnf
#mysql_cnf_path_debian: /etc/mysql/my.cnf
#mysql_cnf_eng: InnoDB

#mysql_secure: mysql_secure_installation
#mysql_root_pass: pw

#mysql_db_name: icat
#mysql_user: icat
#mysql_pass: icat

#mysql_cnf: |
  # MySQL
#  db.target      = mysql
#  db.driver      = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
#  db.url         = jdbc:mysql://localhost:3306/icat
#  db.username    = {{ mysql_user }}
#  db.password    = {{ mysql_pass }}


#---Create user---

#user_name: user1
#user_pass: pass
user_home: "/home/{{ user_name }}"
download_dir: "{{ user_home }}/icatdownloads/"


#---Glassfish---

glassfish_src: "http://download.java.net/glassfish/4.0/release/{{ glassfish_zip }}"
glassfish_zip: glassfish-4.0.zip
glassfish_path: "{{ user_home }}/glassfish4"

glassfish_setup: https://icatproject.org/misc/scripts/setup-glassfish.py
glassfish_java_redhat: /usr/share/java/mysql-connector-java-5.1.17.jar
glassfish_java_debian: /usr/share/java/mysql-connector-java-5.1.28.jar

glassfish_domain: domain1

glassfish_cnf: |
  #Glassfish
  secure    = false
  container = Glassfish
  home      = {{ glassfish_path }}
  port      = 4848


#---Authn---

#At least one must be true

#authn_simple: true
#authn_db: true
#authn_ldap: true
#authn_anon: true

root_mech: simple 
#will be used for root user (eg. 'root_mech: simple' = 'simple/root' )

#--Authn Simple---

authn_src_s: "http://www.icatproject.org/mvn/repo/org/icatproject/authn.simple/1.1.0/{{ authn_zip_s }}"
authn_zip_s: authn.simple-1.1.0-distro.zip
authn_path_s: "{{ user_home }}/authn.simple"

authn_setup_s: authn_simple-setup.properties
authn_prop_s: authn_simple.properties

authn_setup_block_s: |
  {{ glassfish_cnf }}

authn_block_s: |
  #User list
  user.list = root ingest {{ user_name }}

  user.root.password = {{ mysql_root_pass }}
  user.ingest.password = ingest
  user.{{ user_name }}.password = {{ user_pass }}

  mechanism = simple

#--Authn DB--

authn_src_db: "http://www.icatproject.org/mvn/repo/org/icatproject/authn.db/1.2.0/{{ authn_zip_db }}"
authn_zip_db: authn.db-1.2.0-distro.zip
authn_path_db: "{{ user_home }}/authn.db"

authn_setup_db: authn_db-setup.properties
authn_prop_db: authn_db.properties

authn_setup_block_db: |
  {{ glassfish_cnf }}
  {{ mysql_cnf | replace('target','vendor') }}

#--Authn LDAP--

authn_src_ldap: "http://www.icatproject.org/mvn/repo/org/icatproject/authn.ldap/1.2.0/{{ authn_zip_ldap }}"
authn_zip_ldap: "authn.ldap-1.2.0-distro.zip"
authn_path_ldap: "{{ user_home }}/authn.ldap"

authn_setup_ldap: authn_ldap-setup.properties
authn_prop_ldap: authn_ldap.properties

authn_setup_block_ldap: |
  {{ glassfish_cnf }}

ldap_provider: ldap://logon05.fed.cclrc.ac.uk
ldap_principal: \%\@fed.cclrc.ac.uk

#--Authn Anon--

authn_src_anon: "http://www.icatproject.org/mvn/repo/org/icatproject/authn.anon/1.1.1/{{ authn_zip_anon }}"
authn_zip_anon: "authn.anon-1.1.1-distro.zip"
authn_path_anon: "{{ user_home }}/authn.anon"

authn_setup_anon: authn_anon-setup.properties
authn_prop_anon: authn_anon.properties

authn_setup_block_anon: |
  {{ glassfish_cnf }}

#--


#---ICAT Server---

icat_src: "https://repo.icatproject.org/repo/org/icatproject/icat.server/4.8.0/{{ icat_zip }}"
icat_zip: icat.server-4.8.0-distro.zip
icat_path: "{{ user_home }}/icat.server"

icat_setup: icat-setup.properties
icat_prop: icat.properties

lucene_dir: "{{ user_home }}/icat/data/lucene"


#---Storage---

storage_src: http://www.icatproject.org/mvn/repo/org/icatproject/ids.storage_file/1.3.3/{{ storage_zip }}
storage_zip: ids.storage_file-1.3.3-distro.zip
storage_path: "{{ user_home }}/ids.storage_file"

dir_main: "{{ user_home }}/{{ mysql_db_name }}/main"
dir_archive: "{{ user_home }}/{{ mysql_db_name }}/archive"

storage_main: ids.storage_file.main.properties
storage_archive: ids.storage_file.archive.properties
storage_setup: ids.storage_file-setup.properties


#---IDS---

ids_src: "https://repo.icatproject.org/repo/org/icatproject/ids.server/1.7.0/{{ ids_zip }}"
ids_zip: ids.server-1.7.0-distro.zip
ids_path: "{{ user_home }}/ids.server"

ids_setup: ids-setup.properties
ids_prop: ids.properties


#---Lorem---

delete_fac: true
wipe_icat: true

pycat_url: "https://icatproject.org/misc/python-icat/download/{{ pycat_zip }}"
pycat_zip: python-icat-0.13.1.tar.gz
pycat_path: "/root/python-icat-0.13.1"

pycat_login: "curl -k -X POST -d 'json={\"plugin\" : \"{{ root_mech }}\", \"credentials\" : [{\"username\":\"root\"},{\"password\":\"{{ mysql_root_pass}}\"}]}' {{ icat_url }}/icat/session"
pycat_check: "curl -k -G --data-urlencode \"{{ icat_id }}\" --data-urlencode \"query=SELECT f from Facility f\" {{ icat_url }}/icat/entityManager"
pycat_delete: "curl -k --get -X DELETE --data-urlencode \"{{ icat_id }}\" --data-urlencode 'entities={\"Facility\": {\"id\" : {{ icat_fac_id }} }}' {{ icat_url }}/icat/entityManager"
pycat_ingest: icatingest.py --url http://localhost:8080/ICATService/ICAT?wsdl -u root -p {{ mysql_root_pass }} -i {{ user_home }}/lils.yml -a {{ root_mech }}

#---TopCat---

topcat_src: "https://repo.icatproject.org/repo/org/icatproject/topcat/2.2.1/{{ topcat_zip }}"
topcat_zip: topcat-2.2.1-distro.zip
topcat_path: "{{ user_home }}/topcat"

topcat_setup: topcat-setup.properties
topcat_prop: topcat.properties
topcat_json: topcat.json
topcat_lang: lang.json
topcat_css: topcat.css

#Email block
mail_enable: false
email_cnf: |
  #Email setup
  mail.enable = {{ mail_enable }}


